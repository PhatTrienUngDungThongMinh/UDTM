#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBEcommerce")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertWarrantyPolicy(WarrantyPolicy instance);
    partial void UpdateWarrantyPolicy(WarrantyPolicy instance);
    partial void DeleteWarrantyPolicy(WarrantyPolicy instance);
    partial void InsertColor(Color instance);
    partial void UpdateColor(Color instance);
    partial void DeleteColor(Color instance);
    partial void InsertCountryOfOrigin(CountryOfOrigin instance);
    partial void UpdateCountryOfOrigin(CountryOfOrigin instance);
    partial void DeleteCountryOfOrigin(CountryOfOrigin instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertDeliveryReceiptDetail(DeliveryReceiptDetail instance);
    partial void UpdateDeliveryReceiptDetail(DeliveryReceiptDetail instance);
    partial void DeleteDeliveryReceiptDetail(DeliveryReceiptDetail instance);
    partial void InsertDeliveryReceipt(DeliveryReceipt instance);
    partial void UpdateDeliveryReceipt(DeliveryReceipt instance);
    partial void DeleteDeliveryReceipt(DeliveryReceipt instance);
    partial void InsertDM_Screen(DM_Screen instance);
    partial void UpdateDM_Screen(DM_Screen instance);
    partial void DeleteDM_Screen(DM_Screen instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertImage(Image instance);
    partial void UpdateImage(Image instance);
    partial void DeleteImage(Image instance);
    partial void InsertManufacturer(Manufacturer instance);
    partial void UpdateManufacturer(Manufacturer instance);
    partial void DeleteManufacturer(Manufacturer instance);
    partial void InsertOrderCustomer(OrderCustomer instance);
    partial void UpdateOrderCustomer(OrderCustomer instance);
    partial void DeleteOrderCustomer(OrderCustomer instance);
    partial void InsertOrderProductDetail(OrderProductDetail instance);
    partial void UpdateOrderProductDetail(OrderProductDetail instance);
    partial void DeleteOrderProductDetail(OrderProductDetail instance);
    partial void InsertPaymentMethod(PaymentMethod instance);
    partial void UpdatePaymentMethod(PaymentMethod instance);
    partial void DeletePaymentMethod(PaymentMethod instance);
    partial void InsertPosition(Position instance);
    partial void UpdatePosition(Position instance);
    partial void DeletePosition(Position instance);
    partial void InsertProductAttributeDetail(ProductAttributeDetail instance);
    partial void UpdateProductAttributeDetail(ProductAttributeDetail instance);
    partial void DeleteProductAttributeDetail(ProductAttributeDetail instance);
    partial void InsertProductAttribute(ProductAttribute instance);
    partial void UpdateProductAttribute(ProductAttribute instance);
    partial void DeleteProductAttribute(ProductAttribute instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductSupplierDetail(ProductSupplierDetail instance);
    partial void UpdateProductSupplierDetail(ProductSupplierDetail instance);
    partial void DeleteProductSupplierDetail(ProductSupplierDetail instance);
    partial void InsertPromotion(Promotion instance);
    partial void UpdatePromotion(Promotion instance);
    partial void DeletePromotion(Promotion instance);
    partial void InsertQL_PhanQuyen(QL_PhanQuyen instance);
    partial void UpdateQL_PhanQuyen(QL_PhanQuyen instance);
    partial void DeleteQL_PhanQuyen(QL_PhanQuyen instance);
    partial void InsertQL_UserGroup(QL_UserGroup instance);
    partial void UpdateQL_UserGroup(QL_UserGroup instance);
    partial void DeleteQL_UserGroup(QL_UserGroup instance);
    partial void InsertReview(Review instance);
    partial void UpdateReview(Review instance);
    partial void DeleteReview(Review instance);
    partial void InsertSequelizeMeta(SequelizeMeta instance);
    partial void UpdateSequelizeMeta(SequelizeMeta instance);
    partial void DeleteSequelizeMeta(SequelizeMeta instance);
    partial void InsertShippingAddress(ShippingAddress instance);
    partial void UpdateShippingAddress(ShippingAddress instance);
    partial void DeleteShippingAddress(ShippingAddress instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    #endregion
		
		public DBDataContext() : 
				base(global::DTO.Properties.Settings.Default.DBEcommerceConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<WarrantyPolicy> WarrantyPolicies
		{
			get
			{
				return this.GetTable<WarrantyPolicy>();
			}
		}
		
		public System.Data.Linq.Table<Color> Colors
		{
			get
			{
				return this.GetTable<Color>();
			}
		}
		
		public System.Data.Linq.Table<CountryOfOrigin> CountryOfOrigins
		{
			get
			{
				return this.GetTable<CountryOfOrigin>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryReceiptDetail> DeliveryReceiptDetails
		{
			get
			{
				return this.GetTable<DeliveryReceiptDetail>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryReceipt> DeliveryReceipts
		{
			get
			{
				return this.GetTable<DeliveryReceipt>();
			}
		}
		
		public System.Data.Linq.Table<DM_Screen> DM_Screens
		{
			get
			{
				return this.GetTable<DM_Screen>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Image> Images
		{
			get
			{
				return this.GetTable<Image>();
			}
		}
		
		public System.Data.Linq.Table<Manufacturer> Manufacturers
		{
			get
			{
				return this.GetTable<Manufacturer>();
			}
		}
		
		public System.Data.Linq.Table<OrderCustomer> OrderCustomers
		{
			get
			{
				return this.GetTable<OrderCustomer>();
			}
		}
		
		public System.Data.Linq.Table<OrderProductDetail> OrderProductDetails
		{
			get
			{
				return this.GetTable<OrderProductDetail>();
			}
		}
		
		public System.Data.Linq.Table<PaymentMethod> PaymentMethods
		{
			get
			{
				return this.GetTable<PaymentMethod>();
			}
		}
		
		public System.Data.Linq.Table<Position> Positions
		{
			get
			{
				return this.GetTable<Position>();
			}
		}
		
		public System.Data.Linq.Table<ProductAttributeDetail> ProductAttributeDetails
		{
			get
			{
				return this.GetTable<ProductAttributeDetail>();
			}
		}
		
		public System.Data.Linq.Table<ProductAttribute> ProductAttributes
		{
			get
			{
				return this.GetTable<ProductAttribute>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductSupplierDetail> ProductSupplierDetails
		{
			get
			{
				return this.GetTable<ProductSupplierDetail>();
			}
		}
		
		public System.Data.Linq.Table<Promotion> Promotions
		{
			get
			{
				return this.GetTable<Promotion>();
			}
		}
		
		public System.Data.Linq.Table<QL_PhanQuyen> QL_PhanQuyens
		{
			get
			{
				return this.GetTable<QL_PhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<QL_UserGroup> QL_UserGroups
		{
			get
			{
				return this.GetTable<QL_UserGroup>();
			}
		}
		
		public System.Data.Linq.Table<Review> Reviews
		{
			get
			{
				return this.GetTable<Review>();
			}
		}
		
		public System.Data.Linq.Table<SequelizeMeta> SequelizeMetas
		{
			get
			{
				return this.GetTable<SequelizeMeta>();
			}
		}
		
		public System.Data.Linq.Table<ShippingAddress> ShippingAddresses
		{
			get
			{
				return this.GetTable<ShippingAddress>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CategoryName;
		
		private string _pathImg;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnpathImgChanging(string value);
    partial void OnpathImgChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public Category()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pathImg", DbType="NVarChar(255)")]
		public string pathImg
		{
			get
			{
				return this._pathImg;
			}
			set
			{
				if ((this._pathImg != value))
				{
					this.OnpathImgChanging(value);
					this.SendPropertyChanging();
					this._pathImg = value;
					this.SendPropertyChanged("pathImg");
					this.OnpathImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="id", OtherKey="CategoryID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WarrantyPolicies")]
	public partial class WarrantyPolicy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ImgProfile;
		
		private string _WarrantyProvider;
		
		private string _WarrantyConditions;
		
		private string _PolicyContent;
		
		private System.Nullable<System.DateTimeOffset> _DeletedAt;
		
		private string _CreatedBy;
		
		private string _DeletedBy;
		
		private string _UpdatedBy;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnImgProfileChanging(string value);
    partial void OnImgProfileChanged();
    partial void OnWarrantyProviderChanging(string value);
    partial void OnWarrantyProviderChanged();
    partial void OnWarrantyConditionsChanging(string value);
    partial void OnWarrantyConditionsChanged();
    partial void OnPolicyContentChanging(string value);
    partial void OnPolicyContentChanged();
    partial void OnDeletedAtChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDeletedAtChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public WarrantyPolicy()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgProfile", DbType="NVarChar(255)")]
		public string ImgProfile
		{
			get
			{
				return this._ImgProfile;
			}
			set
			{
				if ((this._ImgProfile != value))
				{
					this.OnImgProfileChanging(value);
					this.SendPropertyChanging();
					this._ImgProfile = value;
					this.SendPropertyChanged("ImgProfile");
					this.OnImgProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarrantyProvider", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string WarrantyProvider
		{
			get
			{
				return this._WarrantyProvider;
			}
			set
			{
				if ((this._WarrantyProvider != value))
				{
					this.OnWarrantyProviderChanging(value);
					this.SendPropertyChanging();
					this._WarrantyProvider = value;
					this.SendPropertyChanged("WarrantyProvider");
					this.OnWarrantyProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarrantyConditions", DbType="NVarChar(255)")]
		public string WarrantyConditions
		{
			get
			{
				return this._WarrantyConditions;
			}
			set
			{
				if ((this._WarrantyConditions != value))
				{
					this.OnWarrantyConditionsChanging(value);
					this.SendPropertyChanging();
					this._WarrantyConditions = value;
					this.SendPropertyChanged("WarrantyConditions");
					this.OnWarrantyConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PolicyContent
		{
			get
			{
				return this._PolicyContent;
			}
			set
			{
				if ((this._PolicyContent != value))
				{
					this.OnPolicyContentChanging(value);
					this.SendPropertyChanging();
					this._PolicyContent = value;
					this.SendPropertyChanged("PolicyContent");
					this.OnPolicyContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedAt", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DeletedAt
		{
			get
			{
				return this._DeletedAt;
			}
			set
			{
				if ((this._DeletedAt != value))
				{
					this.OnDeletedAtChanging(value);
					this.SendPropertyChanging();
					this._DeletedAt = value;
					this.SendPropertyChanged("DeletedAt");
					this.OnDeletedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(255)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(255)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(255)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WarrantyPolicy_Product", Storage="_Products", ThisKey="id", OtherKey="WarrantyPolicyID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.WarrantyPolicy = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.WarrantyPolicy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Colors")]
	public partial class Color : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ColorName;
		
		private int _ProductID;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnColorNameChanging(string value);
    partial void OnColorNameChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public Color()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ColorName
		{
			get
			{
				return this._ColorName;
			}
			set
			{
				if ((this._ColorName != value))
				{
					this.OnColorNameChanging(value);
					this.SendPropertyChanging();
					this._ColorName = value;
					this.SendPropertyChanged("ColorName");
					this.OnColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Color", Storage="_Product", ThisKey="ProductID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Colors.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Colors.Add(this);
						this._ProductID = value.id;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CountryOfOrigins")]
	public partial class CountryOfOrigin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CountryName;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public CountryOfOrigin()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryOfOrigin_Product", Storage="_Products", ThisKey="id", OtherKey="CountryID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.CountryOfOrigin = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.CountryOfOrigin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _CustomerName;
		
		private string _Gender;
		
		private System.Nullable<System.DateTimeOffset> _JoinDate;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private System.Nullable<System.DateTimeOffset> _BirthDate;
		
		private string _Password;
		
		private bool _IsActive;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<Review> _Reviews;
		
		private EntitySet<ShippingAddress> _ShippingAddresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnJoinDateChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnJoinDateChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnBirthDateChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public Customer()
		{
			this._Reviews = new EntitySet<Review>(new Action<Review>(this.attach_Reviews), new Action<Review>(this.detach_Reviews));
			this._ShippingAddresses = new EntitySet<ShippingAddress>(new Action<ShippingAddress>(this.attach_ShippingAddresses), new Action<ShippingAddress>(this.detach_ShippingAddresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(255)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(255)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Review", Storage="_Reviews", ThisKey="id", OtherKey="CustomerID")]
		public EntitySet<Review> Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				this._Reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ShippingAddress", Storage="_ShippingAddresses", ThisKey="id", OtherKey="CustomerID")]
		public EntitySet<ShippingAddress> ShippingAddresses
		{
			get
			{
				return this._ShippingAddresses;
			}
			set
			{
				this._ShippingAddresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ShippingAddresses(ShippingAddress entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ShippingAddresses(ShippingAddress entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryReceiptDetails")]
	public partial class DeliveryReceiptDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _ProductID;
		
		private int _ReceiptID;
		
		private int _Quantity;
		
		private decimal _UnitPrice;
		
		private decimal _TotalPrice;
		
		private string _Unit;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntityRef<DeliveryReceipt> _DeliveryReceipt;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnReceiptIDChanging(int value);
    partial void OnReceiptIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public DeliveryReceiptDetail()
		{
			this._DeliveryReceipt = default(EntityRef<DeliveryReceipt>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptID", DbType="Int NOT NULL")]
		public int ReceiptID
		{
			get
			{
				return this._ReceiptID;
			}
			set
			{
				if ((this._ReceiptID != value))
				{
					if (this._DeliveryReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiptID = value;
					this.SendPropertyChanged("ReceiptID");
					this.OnReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,0) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(18,0) NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(255)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryReceipt_DeliveryReceiptDetail", Storage="_DeliveryReceipt", ThisKey="ReceiptID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DeliveryReceipt DeliveryReceipt
		{
			get
			{
				return this._DeliveryReceipt.Entity;
			}
			set
			{
				DeliveryReceipt previousValue = this._DeliveryReceipt.Entity;
				if (((previousValue != value) 
							|| (this._DeliveryReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeliveryReceipt.Entity = null;
						previousValue.DeliveryReceiptDetails.Remove(this);
					}
					this._DeliveryReceipt.Entity = value;
					if ((value != null))
					{
						value.DeliveryReceiptDetails.Add(this);
						this._ReceiptID = value.id;
					}
					else
					{
						this._ReceiptID = default(int);
					}
					this.SendPropertyChanged("DeliveryReceipt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DeliveryReceiptDetail", Storage="_Product", ThisKey="ProductID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.DeliveryReceiptDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.DeliveryReceiptDetails.Add(this);
						this._ProductID = value.id;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryReceipts")]
	public partial class DeliveryReceipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTimeOffset _DeliveryDate;
		
		private string _Notes;
		
		private int _SupplierID;
		
		private int _EmployeeID;
		
		private string _Status;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<DeliveryReceiptDetail> _DeliveryReceiptDetails;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDeliveryDateChanging(System.DateTimeOffset value);
    partial void OnDeliveryDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public DeliveryReceipt()
		{
			this._DeliveryReceiptDetails = new EntitySet<DeliveryReceiptDetail>(new Action<DeliveryReceiptDetail>(this.attach_DeliveryReceiptDetails), new Action<DeliveryReceiptDetail>(this.detach_DeliveryReceiptDetails));
			this._Employee = default(EntityRef<Employee>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryReceipt_DeliveryReceiptDetail", Storage="_DeliveryReceiptDetails", ThisKey="id", OtherKey="ReceiptID")]
		public EntitySet<DeliveryReceiptDetail> DeliveryReceiptDetails
		{
			get
			{
				return this._DeliveryReceiptDetails;
			}
			set
			{
				this._DeliveryReceiptDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_DeliveryReceipt", Storage="_Employee", ThisKey="EmployeeID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.DeliveryReceipts.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.DeliveryReceipts.Add(this);
						this._EmployeeID = value.id;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_DeliveryReceipt", Storage="_Supplier", ThisKey="SupplierID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.DeliveryReceipts.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.DeliveryReceipts.Add(this);
						this._SupplierID = value.id;
					}
					else
					{
						this._SupplierID = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeliveryReceiptDetails(DeliveryReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryReceipt = this;
		}
		
		private void detach_DeliveryReceiptDetails(DeliveryReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryReceipt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DM_Screen")]
	public partial class DM_Screen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ScreenCode;
		
		private string _ScreenName;
		
		private EntitySet<QL_PhanQuyen> _QL_PhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScreenCodeChanging(string value);
    partial void OnScreenCodeChanged();
    partial void OnScreenNameChanging(string value);
    partial void OnScreenNameChanged();
    #endregion
		
		public DM_Screen()
		{
			this._QL_PhanQuyens = new EntitySet<QL_PhanQuyen>(new Action<QL_PhanQuyen>(this.attach_QL_PhanQuyens), new Action<QL_PhanQuyen>(this.detach_QL_PhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ScreenCode
		{
			get
			{
				return this._ScreenCode;
			}
			set
			{
				if ((this._ScreenCode != value))
				{
					this.OnScreenCodeChanging(value);
					this.SendPropertyChanging();
					this._ScreenCode = value;
					this.SendPropertyChanged("ScreenCode");
					this.OnScreenCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ScreenName
		{
			get
			{
				return this._ScreenName;
			}
			set
			{
				if ((this._ScreenName != value))
				{
					this.OnScreenNameChanging(value);
					this.SendPropertyChanging();
					this._ScreenName = value;
					this.SendPropertyChanged("ScreenName");
					this.OnScreenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DM_Screen_QL_PhanQuyen", Storage="_QL_PhanQuyens", ThisKey="ScreenCode", OtherKey="ScreenCode")]
		public EntitySet<QL_PhanQuyen> QL_PhanQuyens
		{
			get
			{
				return this._QL_PhanQuyens;
			}
			set
			{
				this._QL_PhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QL_PhanQuyens(QL_PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.DM_Screen = this;
		}
		
		private void detach_QL_PhanQuyens(QL_PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.DM_Screen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
		private string _Password;
		
		private int _PositionID;
		
		private string _FullName;
		
		private System.Nullable<System.DateTimeOffset> _DateOfBirth;
		
		private string _Gender;
		
		private string _Address;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTimeOffset> _DeletedAt;
		
		private string _CreatedBy;
		
		private string _DeletedBy;
		
		private string _UpdatedBy;
		
		private bool _IsDeleted;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<DeliveryReceipt> _DeliveryReceipts;
		
		private EntitySet<OrderCustomer> _OrderCustomers;
		
		private EntitySet<QL_UserGroup> _QL_UserGroups;
		
		private EntityRef<Position> _Position;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPositionIDChanging(int value);
    partial void OnPositionIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDateOfBirthChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDeletedAtChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDeletedAtChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public Employee()
		{
			this._DeliveryReceipts = new EntitySet<DeliveryReceipt>(new Action<DeliveryReceipt>(this.attach_DeliveryReceipts), new Action<DeliveryReceipt>(this.detach_DeliveryReceipts));
			this._OrderCustomers = new EntitySet<OrderCustomer>(new Action<OrderCustomer>(this.attach_OrderCustomers), new Action<OrderCustomer>(this.detach_OrderCustomers));
			this._QL_UserGroups = new EntitySet<QL_UserGroup>(new Action<QL_UserGroup>(this.attach_QL_UserGroups), new Action<QL_UserGroup>(this.detach_QL_UserGroups));
			this._Position = default(EntityRef<Position>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="Int NOT NULL")]
		public int PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					if (this._Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(255)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(255)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedAt", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DeletedAt
		{
			get
			{
				return this._DeletedAt;
			}
			set
			{
				if ((this._DeletedAt != value))
				{
					this.OnDeletedAtChanging(value);
					this.SendPropertyChanging();
					this._DeletedAt = value;
					this.SendPropertyChanged("DeletedAt");
					this.OnDeletedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(255)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(255)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(255)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_DeliveryReceipt", Storage="_DeliveryReceipts", ThisKey="id", OtherKey="EmployeeID")]
		public EntitySet<DeliveryReceipt> DeliveryReceipts
		{
			get
			{
				return this._DeliveryReceipts;
			}
			set
			{
				this._DeliveryReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_OrderCustomer", Storage="_OrderCustomers", ThisKey="id", OtherKey="EmployeeID")]
		public EntitySet<OrderCustomer> OrderCustomers
		{
			get
			{
				return this._OrderCustomers;
			}
			set
			{
				this._OrderCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_QL_UserGroup", Storage="_QL_UserGroups", ThisKey="id", OtherKey="IDEmployees")]
		public EntitySet<QL_UserGroup> QL_UserGroups
		{
			get
			{
				return this._QL_UserGroups;
			}
			set
			{
				this._QL_UserGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_Employee", Storage="_Position", ThisKey="PositionID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Position Position
		{
			get
			{
				return this._Position.Entity;
			}
			set
			{
				Position previousValue = this._Position.Entity;
				if (((previousValue != value) 
							|| (this._Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Position.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Position.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._PositionID = value.id;
					}
					else
					{
						this._PositionID = default(int);
					}
					this.SendPropertyChanged("Position");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeliveryReceipts(DeliveryReceipt entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_DeliveryReceipts(DeliveryReceipt entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_OrderCustomers(OrderCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_OrderCustomers(OrderCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_QL_UserGroups(QL_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_QL_UserGroups(QL_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Images")]
	public partial class Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _ThuTu;
		
		private int _ProductID;
		
		private string _FilePath;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnThuTuChanging(System.Nullable<int> value);
    partial void OnThuTuChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public Image()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTu", DbType="Int")]
		public System.Nullable<int> ThuTu
		{
			get
			{
				return this._ThuTu;
			}
			set
			{
				if ((this._ThuTu != value))
				{
					this.OnThuTuChanging(value);
					this.SendPropertyChanging();
					this._ThuTu = value;
					this.SendPropertyChanged("ThuTu");
					this.OnThuTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Image", Storage="_Product", ThisKey="ProductID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._ProductID = value.id;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manufacturers")]
	public partial class Manufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ManufacturerName;
		
		private string _PathLogo;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnManufacturerNameChanging(string value);
    partial void OnManufacturerNameChanged();
    partial void OnPathLogoChanging(string value);
    partial void OnPathLogoChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public Manufacturer()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ManufacturerName
		{
			get
			{
				return this._ManufacturerName;
			}
			set
			{
				if ((this._ManufacturerName != value))
				{
					this.OnManufacturerNameChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerName = value;
					this.SendPropertyChanged("ManufacturerName");
					this.OnManufacturerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathLogo", DbType="NVarChar(255)")]
		public string PathLogo
		{
			get
			{
				return this._PathLogo;
			}
			set
			{
				if ((this._PathLogo != value))
				{
					this.OnPathLogoChanging(value);
					this.SendPropertyChanging();
					this._PathLogo = value;
					this.SendPropertyChanged("PathLogo");
					this.OnPathLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Product", Storage="_Products", ThisKey="id", OtherKey="ManufacturerID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderCustomers")]
	public partial class OrderCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTimeOffset _OrderDate;
		
		private string _OrderStatus;
		
		private decimal _TotalAmount;
		
		private System.Nullable<int> _PaymentMethodID;
		
		private System.Nullable<int> _EmployeeID;
		
		private System.Nullable<int> _PromotionID;
		
		private string _CustomerID;
		
		private bool _PaymentStatus;
		
		private System.Nullable<System.DateTimeOffset> _PaymentDate;
		
		private System.Nullable<int> _AddressID;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<OrderProductDetail> _OrderProductDetails;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<PaymentMethod> _PaymentMethod;
		
		private EntityRef<Promotion> _Promotion;
		
		private EntityRef<ShippingAddress> _ShippingAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnOrderDateChanging(System.DateTimeOffset value);
    partial void OnOrderDateChanged();
    partial void OnOrderStatusChanging(string value);
    partial void OnOrderStatusChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnPaymentMethodIDChanging(System.Nullable<int> value);
    partial void OnPaymentMethodIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnPromotionIDChanging(System.Nullable<int> value);
    partial void OnPromotionIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnPaymentStatusChanging(bool value);
    partial void OnPaymentStatusChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnPaymentDateChanged();
    partial void OnAddressIDChanging(System.Nullable<int> value);
    partial void OnAddressIDChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public OrderCustomer()
		{
			this._OrderProductDetails = new EntitySet<OrderProductDetail>(new Action<OrderProductDetail>(this.attach_OrderProductDetails), new Action<OrderProductDetail>(this.detach_OrderProductDetails));
			this._Employee = default(EntityRef<Employee>);
			this._PaymentMethod = default(EntityRef<PaymentMethod>);
			this._Promotion = default(EntityRef<Promotion>);
			this._ShippingAddress = default(EntityRef<ShippingAddress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this.OnOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._OrderStatus = value;
					this.SendPropertyChanged("OrderStatus");
					this.OnOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodID", DbType="Int")]
		public System.Nullable<int> PaymentMethodID
		{
			get
			{
				return this._PaymentMethodID;
			}
			set
			{
				if ((this._PaymentMethodID != value))
				{
					if (this._PaymentMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentMethodIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodID = value;
					this.SendPropertyChanged("PaymentMethodID");
					this.OnPaymentMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", DbType="Int")]
		public System.Nullable<int> PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					if (this._Promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotionIDChanging(value);
					this.SendPropertyChanging();
					this._PromotionID = value;
					this.SendPropertyChanged("PromotionID");
					this.OnPromotionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentStatus", DbType="Bit NOT NULL")]
		public bool PaymentStatus
		{
			get
			{
				return this._PaymentStatus;
			}
			set
			{
				if ((this._PaymentStatus != value))
				{
					this.OnPaymentStatusChanging(value);
					this.SendPropertyChanging();
					this._PaymentStatus = value;
					this.SendPropertyChanged("PaymentStatus");
					this.OnPaymentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="Int")]
		public System.Nullable<int> AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._ShippingAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderCustomer_OrderProductDetail", Storage="_OrderProductDetails", ThisKey="id", OtherKey="OrderID")]
		public EntitySet<OrderProductDetail> OrderProductDetails
		{
			get
			{
				return this._OrderProductDetails;
			}
			set
			{
				this._OrderProductDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_OrderCustomer", Storage="_Employee", ThisKey="EmployeeID", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.OrderCustomers.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.OrderCustomers.Add(this);
						this._EmployeeID = value.id;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentMethod_OrderCustomer", Storage="_PaymentMethod", ThisKey="PaymentMethodID", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public PaymentMethod PaymentMethod
		{
			get
			{
				return this._PaymentMethod.Entity;
			}
			set
			{
				PaymentMethod previousValue = this._PaymentMethod.Entity;
				if (((previousValue != value) 
							|| (this._PaymentMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentMethod.Entity = null;
						previousValue.OrderCustomers.Remove(this);
					}
					this._PaymentMethod.Entity = value;
					if ((value != null))
					{
						value.OrderCustomers.Add(this);
						this._PaymentMethodID = value.id;
					}
					else
					{
						this._PaymentMethodID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_OrderCustomer", Storage="_Promotion", ThisKey="PromotionID", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public Promotion Promotion
		{
			get
			{
				return this._Promotion.Entity;
			}
			set
			{
				Promotion previousValue = this._Promotion.Entity;
				if (((previousValue != value) 
							|| (this._Promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promotion.Entity = null;
						previousValue.OrderCustomers.Remove(this);
					}
					this._Promotion.Entity = value;
					if ((value != null))
					{
						value.OrderCustomers.Add(this);
						this._PromotionID = value.id;
					}
					else
					{
						this._PromotionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Promotion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingAddress_OrderCustomer", Storage="_ShippingAddress", ThisKey="AddressID", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public ShippingAddress ShippingAddress
		{
			get
			{
				return this._ShippingAddress.Entity;
			}
			set
			{
				ShippingAddress previousValue = this._ShippingAddress.Entity;
				if (((previousValue != value) 
							|| (this._ShippingAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShippingAddress.Entity = null;
						previousValue.OrderCustomers.Remove(this);
					}
					this._ShippingAddress.Entity = value;
					if ((value != null))
					{
						value.OrderCustomers.Add(this);
						this._AddressID = value.id;
					}
					else
					{
						this._AddressID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ShippingAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderProductDetails(OrderProductDetail entity)
		{
			this.SendPropertyChanging();
			entity.OrderCustomer = this;
		}
		
		private void detach_OrderProductDetails(OrderProductDetail entity)
		{
			this.SendPropertyChanging();
			entity.OrderCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderProductDetails")]
	public partial class OrderProductDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _OrderID;
		
		private int _ProductID;
		
		private string _UnitPrice;
		
		private int _Quantity;
		
		private string _Notes;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntityRef<OrderCustomer> _OrderCustomer;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnUnitPriceChanging(string value);
    partial void OnUnitPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public OrderProductDetail()
		{
			this._OrderCustomer = default(EntityRef<OrderCustomer>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._OrderCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(255)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderCustomer_OrderProductDetail", Storage="_OrderCustomer", ThisKey="OrderID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OrderCustomer OrderCustomer
		{
			get
			{
				return this._OrderCustomer.Entity;
			}
			set
			{
				OrderCustomer previousValue = this._OrderCustomer.Entity;
				if (((previousValue != value) 
							|| (this._OrderCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderCustomer.Entity = null;
						previousValue.OrderProductDetails.Remove(this);
					}
					this._OrderCustomer.Entity = value;
					if ((value != null))
					{
						value.OrderProductDetails.Add(this);
						this._OrderID = value.id;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("OrderCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderProductDetail", Storage="_Product", ThisKey="ProductID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.OrderProductDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.OrderProductDetails.Add(this);
						this._ProductID = value.id;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentMethods")]
	public partial class PaymentMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PaymentMethodName;
		
		private string _Description;
		
		private string _Status;
		
		private System.Nullable<System.DateTimeOffset> _StartDate;
		
		private System.Nullable<System.DateTimeOffset> _EndDate;
		
		private System.Nullable<decimal> _ApplicableFee;
		
		private System.Nullable<System.DateTimeOffset> _DeletedAt;
		
		private string _CreatedBy;
		
		private string _DeletedBy;
		
		private string _UpdatedBy;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<OrderCustomer> _OrderCustomers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPaymentMethodNameChanging(string value);
    partial void OnPaymentMethodNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnEndDateChanged();
    partial void OnApplicableFeeChanging(System.Nullable<decimal> value);
    partial void OnApplicableFeeChanged();
    partial void OnDeletedAtChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDeletedAtChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public PaymentMethod()
		{
			this._OrderCustomers = new EntitySet<OrderCustomer>(new Action<OrderCustomer>(this.attach_OrderCustomers), new Action<OrderCustomer>(this.detach_OrderCustomers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PaymentMethodName
		{
			get
			{
				return this._PaymentMethodName;
			}
			set
			{
				if ((this._PaymentMethodName != value))
				{
					this.OnPaymentMethodNameChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodName = value;
					this.SendPropertyChanged("PaymentMethodName");
					this.OnPaymentMethodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicableFee", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ApplicableFee
		{
			get
			{
				return this._ApplicableFee;
			}
			set
			{
				if ((this._ApplicableFee != value))
				{
					this.OnApplicableFeeChanging(value);
					this.SendPropertyChanging();
					this._ApplicableFee = value;
					this.SendPropertyChanged("ApplicableFee");
					this.OnApplicableFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedAt", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DeletedAt
		{
			get
			{
				return this._DeletedAt;
			}
			set
			{
				if ((this._DeletedAt != value))
				{
					this.OnDeletedAtChanging(value);
					this.SendPropertyChanging();
					this._DeletedAt = value;
					this.SendPropertyChanged("DeletedAt");
					this.OnDeletedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(255)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(255)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(255)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentMethod_OrderCustomer", Storage="_OrderCustomers", ThisKey="id", OtherKey="PaymentMethodID")]
		public EntitySet<OrderCustomer> OrderCustomers
		{
			get
			{
				return this._OrderCustomers;
			}
			set
			{
				this._OrderCustomers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderCustomers(OrderCustomer entity)
		{
			this.SendPropertyChanging();
			entity.PaymentMethod = this;
		}
		
		private void detach_OrderCustomers(OrderCustomer entity)
		{
			this.SendPropertyChanging();
			entity.PaymentMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Positions")]
	public partial class Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PositionName;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<QL_PhanQuyen> _QL_PhanQuyens;
		
		private EntitySet<QL_UserGroup> _QL_UserGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPositionNameChanging(string value);
    partial void OnPositionNameChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public Position()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._QL_PhanQuyens = new EntitySet<QL_PhanQuyen>(new Action<QL_PhanQuyen>(this.attach_QL_PhanQuyens), new Action<QL_PhanQuyen>(this.detach_QL_PhanQuyens));
			this._QL_UserGroups = new EntitySet<QL_UserGroup>(new Action<QL_UserGroup>(this.attach_QL_UserGroups), new Action<QL_UserGroup>(this.detach_QL_UserGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PositionName
		{
			get
			{
				return this._PositionName;
			}
			set
			{
				if ((this._PositionName != value))
				{
					this.OnPositionNameChanging(value);
					this.SendPropertyChanging();
					this._PositionName = value;
					this.SendPropertyChanged("PositionName");
					this.OnPositionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_Employee", Storage="_Employees", ThisKey="id", OtherKey="PositionID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_QL_PhanQuyen", Storage="_QL_PhanQuyens", ThisKey="id", OtherKey="IDPositions")]
		public EntitySet<QL_PhanQuyen> QL_PhanQuyens
		{
			get
			{
				return this._QL_PhanQuyens;
			}
			set
			{
				this._QL_PhanQuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_QL_UserGroup", Storage="_QL_UserGroups", ThisKey="id", OtherKey="IDPositions")]
		public EntitySet<QL_UserGroup> QL_UserGroups
		{
			get
			{
				return this._QL_UserGroups;
			}
			set
			{
				this._QL_UserGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Position = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Position = null;
		}
		
		private void attach_QL_PhanQuyens(QL_PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.Position = this;
		}
		
		private void detach_QL_PhanQuyens(QL_PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.Position = null;
		}
		
		private void attach_QL_UserGroups(QL_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.Position = this;
		}
		
		private void detach_QL_UserGroups(QL_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.Position = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductAttributeDetails")]
	public partial class ProductAttributeDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _ProductID;
		
		private int _AttributeID;
		
		private string _AttributeValue;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntityRef<ProductAttribute> _ProductAttribute;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnAttributeIDChanging(int value);
    partial void OnAttributeIDChanged();
    partial void OnAttributeValueChanging(string value);
    partial void OnAttributeValueChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public ProductAttributeDetail()
		{
			this._ProductAttribute = default(EntityRef<ProductAttribute>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeID", DbType="Int NOT NULL")]
		public int AttributeID
		{
			get
			{
				return this._AttributeID;
			}
			set
			{
				if ((this._AttributeID != value))
				{
					if (this._ProductAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._AttributeID = value;
					this.SendPropertyChanged("AttributeID");
					this.OnAttributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeValue", DbType="NVarChar(255)")]
		public string AttributeValue
		{
			get
			{
				return this._AttributeValue;
			}
			set
			{
				if ((this._AttributeValue != value))
				{
					this.OnAttributeValueChanging(value);
					this.SendPropertyChanging();
					this._AttributeValue = value;
					this.SendPropertyChanged("AttributeValue");
					this.OnAttributeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductAttribute_ProductAttributeDetail", Storage="_ProductAttribute", ThisKey="AttributeID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ProductAttribute ProductAttribute
		{
			get
			{
				return this._ProductAttribute.Entity;
			}
			set
			{
				ProductAttribute previousValue = this._ProductAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ProductAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductAttribute.Entity = null;
						previousValue.ProductAttributeDetails.Remove(this);
					}
					this._ProductAttribute.Entity = value;
					if ((value != null))
					{
						value.ProductAttributeDetails.Add(this);
						this._AttributeID = value.id;
					}
					else
					{
						this._AttributeID = default(int);
					}
					this.SendPropertyChanged("ProductAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductAttributeDetail", Storage="_Product", ThisKey="ProductID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductAttributeDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductAttributeDetails.Add(this);
						this._ProductID = value.id;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductAttributes")]
	public partial class ProductAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _AttributeName;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<ProductAttributeDetail> _ProductAttributeDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAttributeNameChanging(string value);
    partial void OnAttributeNameChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public ProductAttribute()
		{
			this._ProductAttributeDetails = new EntitySet<ProductAttributeDetail>(new Action<ProductAttributeDetail>(this.attach_ProductAttributeDetails), new Action<ProductAttributeDetail>(this.detach_ProductAttributeDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AttributeName
		{
			get
			{
				return this._AttributeName;
			}
			set
			{
				if ((this._AttributeName != value))
				{
					this.OnAttributeNameChanging(value);
					this.SendPropertyChanging();
					this._AttributeName = value;
					this.SendPropertyChanged("AttributeName");
					this.OnAttributeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductAttribute_ProductAttributeDetail", Storage="_ProductAttributeDetails", ThisKey="id", OtherKey="AttributeID")]
		public EntitySet<ProductAttributeDetail> ProductAttributeDetails
		{
			get
			{
				return this._ProductAttributeDetails;
			}
			set
			{
				this._ProductAttributeDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductAttributeDetails(ProductAttributeDetail entity)
		{
			this.SendPropertyChanging();
			entity.ProductAttribute = this;
		}
		
		private void detach_ProductAttributeDetails(ProductAttributeDetail entity)
		{
			this.SendPropertyChanging();
			entity.ProductAttribute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ProductName;
		
		private decimal _ListedPrice;
		
		private string _RepresentativeImage;
		
		private int _Stock;
		
		private string _Description;
		
		private System.Nullable<decimal> _PromotionalPrice;
		
		private string _Status;
		
		private System.Nullable<int> _Sold;
		
		private System.Nullable<System.DateTimeOffset> _DeletedAt;
		
		private string _CreatedBy;
		
		private string _DeletedBy;
		
		private string _UpdatedBy;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _CategoryID;
		
		private System.Nullable<int> _WarrantyPolicyID;
		
		private System.Nullable<int> _ManufacturerID;
		
		private System.Nullable<int> _CountryID;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<Color> _Colors;
		
		private EntitySet<DeliveryReceiptDetail> _DeliveryReceiptDetails;
		
		private EntitySet<Image> _Images;
		
		private EntitySet<OrderProductDetail> _OrderProductDetails;
		
		private EntitySet<ProductAttributeDetail> _ProductAttributeDetails;
		
		private EntitySet<ProductSupplierDetail> _ProductSupplierDetails;
		
		private EntitySet<Review> _Reviews;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<CountryOfOrigin> _CountryOfOrigin;
		
		private EntityRef<Manufacturer> _Manufacturer;
		
		private EntityRef<WarrantyPolicy> _WarrantyPolicy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnListedPriceChanging(decimal value);
    partial void OnListedPriceChanged();
    partial void OnRepresentativeImageChanging(string value);
    partial void OnRepresentativeImageChanged();
    partial void OnStockChanging(int value);
    partial void OnStockChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPromotionalPriceChanging(System.Nullable<decimal> value);
    partial void OnPromotionalPriceChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnSoldChanging(System.Nullable<int> value);
    partial void OnSoldChanged();
    partial void OnDeletedAtChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDeletedAtChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnWarrantyPolicyIDChanging(System.Nullable<int> value);
    partial void OnWarrantyPolicyIDChanged();
    partial void OnManufacturerIDChanging(System.Nullable<int> value);
    partial void OnManufacturerIDChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public Product()
		{
			this._Colors = new EntitySet<Color>(new Action<Color>(this.attach_Colors), new Action<Color>(this.detach_Colors));
			this._DeliveryReceiptDetails = new EntitySet<DeliveryReceiptDetail>(new Action<DeliveryReceiptDetail>(this.attach_DeliveryReceiptDetails), new Action<DeliveryReceiptDetail>(this.detach_DeliveryReceiptDetails));
			this._Images = new EntitySet<Image>(new Action<Image>(this.attach_Images), new Action<Image>(this.detach_Images));
			this._OrderProductDetails = new EntitySet<OrderProductDetail>(new Action<OrderProductDetail>(this.attach_OrderProductDetails), new Action<OrderProductDetail>(this.detach_OrderProductDetails));
			this._ProductAttributeDetails = new EntitySet<ProductAttributeDetail>(new Action<ProductAttributeDetail>(this.attach_ProductAttributeDetails), new Action<ProductAttributeDetail>(this.detach_ProductAttributeDetails));
			this._ProductSupplierDetails = new EntitySet<ProductSupplierDetail>(new Action<ProductSupplierDetail>(this.attach_ProductSupplierDetails), new Action<ProductSupplierDetail>(this.detach_ProductSupplierDetails));
			this._Reviews = new EntitySet<Review>(new Action<Review>(this.attach_Reviews), new Action<Review>(this.detach_Reviews));
			this._Category = default(EntityRef<Category>);
			this._CountryOfOrigin = default(EntityRef<CountryOfOrigin>);
			this._Manufacturer = default(EntityRef<Manufacturer>);
			this._WarrantyPolicy = default(EntityRef<WarrantyPolicy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListedPrice", DbType="Decimal(18,0) NOT NULL")]
		public decimal ListedPrice
		{
			get
			{
				return this._ListedPrice;
			}
			set
			{
				if ((this._ListedPrice != value))
				{
					this.OnListedPriceChanging(value);
					this.SendPropertyChanging();
					this._ListedPrice = value;
					this.SendPropertyChanged("ListedPrice");
					this.OnListedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepresentativeImage", DbType="NVarChar(255)")]
		public string RepresentativeImage
		{
			get
			{
				return this._RepresentativeImage;
			}
			set
			{
				if ((this._RepresentativeImage != value))
				{
					this.OnRepresentativeImageChanging(value);
					this.SendPropertyChanging();
					this._RepresentativeImage = value;
					this.SendPropertyChanged("RepresentativeImage");
					this.OnRepresentativeImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Int NOT NULL")]
		public int Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionalPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PromotionalPrice
		{
			get
			{
				return this._PromotionalPrice;
			}
			set
			{
				if ((this._PromotionalPrice != value))
				{
					this.OnPromotionalPriceChanging(value);
					this.SendPropertyChanging();
					this._PromotionalPrice = value;
					this.SendPropertyChanged("PromotionalPrice");
					this.OnPromotionalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sold", DbType="Int")]
		public System.Nullable<int> Sold
		{
			get
			{
				return this._Sold;
			}
			set
			{
				if ((this._Sold != value))
				{
					this.OnSoldChanging(value);
					this.SendPropertyChanging();
					this._Sold = value;
					this.SendPropertyChanged("Sold");
					this.OnSoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedAt", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DeletedAt
		{
			get
			{
				return this._DeletedAt;
			}
			set
			{
				if ((this._DeletedAt != value))
				{
					this.OnDeletedAtChanging(value);
					this.SendPropertyChanging();
					this._DeletedAt = value;
					this.SendPropertyChanged("DeletedAt");
					this.OnDeletedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(255)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(255)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(255)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarrantyPolicyID", DbType="Int")]
		public System.Nullable<int> WarrantyPolicyID
		{
			get
			{
				return this._WarrantyPolicyID;
			}
			set
			{
				if ((this._WarrantyPolicyID != value))
				{
					if (this._WarrantyPolicy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarrantyPolicyIDChanging(value);
					this.SendPropertyChanging();
					this._WarrantyPolicyID = value;
					this.SendPropertyChanged("WarrantyPolicyID");
					this.OnWarrantyPolicyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerID", DbType="Int")]
		public System.Nullable<int> ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					if (this._Manufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._CountryOfOrigin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Color", Storage="_Colors", ThisKey="id", OtherKey="ProductID")]
		public EntitySet<Color> Colors
		{
			get
			{
				return this._Colors;
			}
			set
			{
				this._Colors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DeliveryReceiptDetail", Storage="_DeliveryReceiptDetails", ThisKey="id", OtherKey="ProductID")]
		public EntitySet<DeliveryReceiptDetail> DeliveryReceiptDetails
		{
			get
			{
				return this._DeliveryReceiptDetails;
			}
			set
			{
				this._DeliveryReceiptDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Image", Storage="_Images", ThisKey="id", OtherKey="ProductID")]
		public EntitySet<Image> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				this._Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderProductDetail", Storage="_OrderProductDetails", ThisKey="id", OtherKey="ProductID")]
		public EntitySet<OrderProductDetail> OrderProductDetails
		{
			get
			{
				return this._OrderProductDetails;
			}
			set
			{
				this._OrderProductDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductAttributeDetail", Storage="_ProductAttributeDetails", ThisKey="id", OtherKey="ProductID")]
		public EntitySet<ProductAttributeDetail> ProductAttributeDetails
		{
			get
			{
				return this._ProductAttributeDetails;
			}
			set
			{
				this._ProductAttributeDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductSupplierDetail", Storage="_ProductSupplierDetails", ThisKey="id", OtherKey="ProductID")]
		public EntitySet<ProductSupplierDetail> ProductSupplierDetails
		{
			get
			{
				return this._ProductSupplierDetails;
			}
			set
			{
				this._ProductSupplierDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Review", Storage="_Reviews", ThisKey="id", OtherKey="ProductID")]
		public EntitySet<Review> Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				this._Reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="CategoryID", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._CategoryID = value.id;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryOfOrigin_Product", Storage="_CountryOfOrigin", ThisKey="CountryID", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public CountryOfOrigin CountryOfOrigin
		{
			get
			{
				return this._CountryOfOrigin.Entity;
			}
			set
			{
				CountryOfOrigin previousValue = this._CountryOfOrigin.Entity;
				if (((previousValue != value) 
							|| (this._CountryOfOrigin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CountryOfOrigin.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._CountryOfOrigin.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._CountryID = value.id;
					}
					else
					{
						this._CountryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CountryOfOrigin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Product", Storage="_Manufacturer", ThisKey="ManufacturerID", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public Manufacturer Manufacturer
		{
			get
			{
				return this._Manufacturer.Entity;
			}
			set
			{
				Manufacturer previousValue = this._Manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._Manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manufacturer.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Manufacturer.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ManufacturerID = value.id;
					}
					else
					{
						this._ManufacturerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Manufacturer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WarrantyPolicy_Product", Storage="_WarrantyPolicy", ThisKey="WarrantyPolicyID", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public WarrantyPolicy WarrantyPolicy
		{
			get
			{
				return this._WarrantyPolicy.Entity;
			}
			set
			{
				WarrantyPolicy previousValue = this._WarrantyPolicy.Entity;
				if (((previousValue != value) 
							|| (this._WarrantyPolicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WarrantyPolicy.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._WarrantyPolicy.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._WarrantyPolicyID = value.id;
					}
					else
					{
						this._WarrantyPolicyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WarrantyPolicy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Colors(Color entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Colors(Color entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_DeliveryReceiptDetails(DeliveryReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_DeliveryReceiptDetails(DeliveryReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_OrderProductDetails(OrderProductDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_OrderProductDetails(OrderProductDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductAttributeDetails(ProductAttributeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductAttributeDetails(ProductAttributeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductSupplierDetails(ProductSupplierDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductSupplierDetails(ProductSupplierDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSupplierDetails")]
	public partial class ProductSupplierDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _ProductID;
		
		private int _SupplierID;
		
		private System.DateTimeOffset _StartDate;
		
		private System.Nullable<System.DateTimeOffset> _EndDate;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnStartDateChanging(System.DateTimeOffset value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnEndDateChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public ProductSupplierDetail()
		{
			this._Product = default(EntityRef<Product>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductSupplierDetail", Storage="_Product", ThisKey="ProductID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductSupplierDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductSupplierDetails.Add(this);
						this._ProductID = value.id;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ProductSupplierDetail", Storage="_Supplier", ThisKey="SupplierID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.ProductSupplierDetails.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.ProductSupplierDetails.Add(this);
						this._SupplierID = value.id;
					}
					else
					{
						this._SupplierID = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promotions")]
	public partial class Promotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ImgProfile;
		
		private string _PromotionName;
		
		private decimal _DiscountValue;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _MinValue;
		
		private System.Nullable<decimal> _MaxDiscount;
		
		private string _Code;
		
		private System.DateTimeOffset _StartDate;
		
		private System.Nullable<System.DateTimeOffset> _EndDate;
		
		private System.Nullable<System.DateTimeOffset> _DeletedAt;
		
		private string _CreatedBy;
		
		private string _DeletedBy;
		
		private string _UpdatedBy;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<OrderCustomer> _OrderCustomers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnImgProfileChanging(string value);
    partial void OnImgProfileChanged();
    partial void OnPromotionNameChanging(string value);
    partial void OnPromotionNameChanged();
    partial void OnDiscountValueChanging(decimal value);
    partial void OnDiscountValueChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnMinValueChanging(System.Nullable<decimal> value);
    partial void OnMinValueChanged();
    partial void OnMaxDiscountChanging(System.Nullable<decimal> value);
    partial void OnMaxDiscountChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnStartDateChanging(System.DateTimeOffset value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnEndDateChanged();
    partial void OnDeletedAtChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDeletedAtChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public Promotion()
		{
			this._OrderCustomers = new EntitySet<OrderCustomer>(new Action<OrderCustomer>(this.attach_OrderCustomers), new Action<OrderCustomer>(this.detach_OrderCustomers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgProfile", DbType="NVarChar(255)")]
		public string ImgProfile
		{
			get
			{
				return this._ImgProfile;
			}
			set
			{
				if ((this._ImgProfile != value))
				{
					this.OnImgProfileChanging(value);
					this.SendPropertyChanging();
					this._ImgProfile = value;
					this.SendPropertyChanged("ImgProfile");
					this.OnImgProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PromotionName
		{
			get
			{
				return this._PromotionName;
			}
			set
			{
				if ((this._PromotionName != value))
				{
					this.OnPromotionNameChanging(value);
					this.SendPropertyChanging();
					this._PromotionName = value;
					this.SendPropertyChanged("PromotionName");
					this.OnPromotionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountValue", DbType="Decimal(18,0) NOT NULL")]
		public decimal DiscountValue
		{
			get
			{
				return this._DiscountValue;
			}
			set
			{
				if ((this._DiscountValue != value))
				{
					this.OnDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._DiscountValue = value;
					this.SendPropertyChanged("DiscountValue");
					this.OnDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinValue", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> MinValue
		{
			get
			{
				return this._MinValue;
			}
			set
			{
				if ((this._MinValue != value))
				{
					this.OnMinValueChanging(value);
					this.SendPropertyChanging();
					this._MinValue = value;
					this.SendPropertyChanged("MinValue");
					this.OnMinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDiscount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> MaxDiscount
		{
			get
			{
				return this._MaxDiscount;
			}
			set
			{
				if ((this._MaxDiscount != value))
				{
					this.OnMaxDiscountChanging(value);
					this.SendPropertyChanging();
					this._MaxDiscount = value;
					this.SendPropertyChanged("MaxDiscount");
					this.OnMaxDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedAt", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DeletedAt
		{
			get
			{
				return this._DeletedAt;
			}
			set
			{
				if ((this._DeletedAt != value))
				{
					this.OnDeletedAtChanging(value);
					this.SendPropertyChanging();
					this._DeletedAt = value;
					this.SendPropertyChanged("DeletedAt");
					this.OnDeletedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(255)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="NVarChar(255)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(255)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_OrderCustomer", Storage="_OrderCustomers", ThisKey="id", OtherKey="PromotionID")]
		public EntitySet<OrderCustomer> OrderCustomers
		{
			get
			{
				return this._OrderCustomers;
			}
			set
			{
				this._OrderCustomers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderCustomers(OrderCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = this;
		}
		
		private void detach_OrderCustomers(OrderCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QL_PhanQuyen")]
	public partial class QL_PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPositions;
		
		private string _ScreenCode;
		
		private bool _HasPermission;
		
		private EntityRef<Position> _Position;
		
		private EntityRef<DM_Screen> _DM_Screen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPositionsChanging(int value);
    partial void OnIDPositionsChanged();
    partial void OnScreenCodeChanging(string value);
    partial void OnScreenCodeChanged();
    partial void OnHasPermissionChanging(bool value);
    partial void OnHasPermissionChanged();
    #endregion
		
		public QL_PhanQuyen()
		{
			this._Position = default(EntityRef<Position>);
			this._DM_Screen = default(EntityRef<DM_Screen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPositions", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPositions
		{
			get
			{
				return this._IDPositions;
			}
			set
			{
				if ((this._IDPositions != value))
				{
					if (this._Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPositionsChanging(value);
					this.SendPropertyChanging();
					this._IDPositions = value;
					this.SendPropertyChanged("IDPositions");
					this.OnIDPositionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ScreenCode
		{
			get
			{
				return this._ScreenCode;
			}
			set
			{
				if ((this._ScreenCode != value))
				{
					if (this._DM_Screen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScreenCodeChanging(value);
					this.SendPropertyChanging();
					this._ScreenCode = value;
					this.SendPropertyChanged("ScreenCode");
					this.OnScreenCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPermission", DbType="Bit NOT NULL")]
		public bool HasPermission
		{
			get
			{
				return this._HasPermission;
			}
			set
			{
				if ((this._HasPermission != value))
				{
					this.OnHasPermissionChanging(value);
					this.SendPropertyChanging();
					this._HasPermission = value;
					this.SendPropertyChanged("HasPermission");
					this.OnHasPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_QL_PhanQuyen", Storage="_Position", ThisKey="IDPositions", OtherKey="id", IsForeignKey=true)]
		public Position Position
		{
			get
			{
				return this._Position.Entity;
			}
			set
			{
				Position previousValue = this._Position.Entity;
				if (((previousValue != value) 
							|| (this._Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Position.Entity = null;
						previousValue.QL_PhanQuyens.Remove(this);
					}
					this._Position.Entity = value;
					if ((value != null))
					{
						value.QL_PhanQuyens.Add(this);
						this._IDPositions = value.id;
					}
					else
					{
						this._IDPositions = default(int);
					}
					this.SendPropertyChanged("Position");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DM_Screen_QL_PhanQuyen", Storage="_DM_Screen", ThisKey="ScreenCode", OtherKey="ScreenCode", IsForeignKey=true)]
		public DM_Screen DM_Screen
		{
			get
			{
				return this._DM_Screen.Entity;
			}
			set
			{
				DM_Screen previousValue = this._DM_Screen.Entity;
				if (((previousValue != value) 
							|| (this._DM_Screen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DM_Screen.Entity = null;
						previousValue.QL_PhanQuyens.Remove(this);
					}
					this._DM_Screen.Entity = value;
					if ((value != null))
					{
						value.QL_PhanQuyens.Add(this);
						this._ScreenCode = value.ScreenCode;
					}
					else
					{
						this._ScreenCode = default(string);
					}
					this.SendPropertyChanged("DM_Screen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QL_UserGroup")]
	public partial class QL_UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEmployees;
		
		private int _IDPositions;
		
		private string _Note;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Position> _Position;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEmployeesChanging(int value);
    partial void OnIDEmployeesChanged();
    partial void OnIDPositionsChanging(int value);
    partial void OnIDPositionsChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public QL_UserGroup()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Position = default(EntityRef<Position>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmployees", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDEmployees
		{
			get
			{
				return this._IDEmployees;
			}
			set
			{
				if ((this._IDEmployees != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEmployeesChanging(value);
					this.SendPropertyChanging();
					this._IDEmployees = value;
					this.SendPropertyChanged("IDEmployees");
					this.OnIDEmployeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPositions", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPositions
		{
			get
			{
				return this._IDPositions;
			}
			set
			{
				if ((this._IDPositions != value))
				{
					if (this._Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPositionsChanging(value);
					this.SendPropertyChanging();
					this._IDPositions = value;
					this.SendPropertyChanged("IDPositions");
					this.OnIDPositionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(255)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_QL_UserGroup", Storage="_Employee", ThisKey="IDEmployees", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.QL_UserGroups.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.QL_UserGroups.Add(this);
						this._IDEmployees = value.id;
					}
					else
					{
						this._IDEmployees = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_QL_UserGroup", Storage="_Position", ThisKey="IDPositions", OtherKey="id", IsForeignKey=true)]
		public Position Position
		{
			get
			{
				return this._Position.Entity;
			}
			set
			{
				Position previousValue = this._Position.Entity;
				if (((previousValue != value) 
							|| (this._Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Position.Entity = null;
						previousValue.QL_UserGroups.Remove(this);
					}
					this._Position.Entity = value;
					if ((value != null))
					{
						value.QL_UserGroups.Add(this);
						this._IDPositions = value.id;
					}
					else
					{
						this._IDPositions = default(int);
					}
					this.SendPropertyChanged("Position");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reviews")]
	public partial class Review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ReviewContent;
		
		private int _RatingLevel;
		
		private System.DateTimeOffset _ReviewDate;
		
		private int _ProductID;
		
		private string _CustomerID;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private System.Nullable<bool> _Bought;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnReviewContentChanging(string value);
    partial void OnReviewContentChanged();
    partial void OnRatingLevelChanging(int value);
    partial void OnRatingLevelChanged();
    partial void OnReviewDateChanging(System.DateTimeOffset value);
    partial void OnReviewDateChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    partial void OnBoughtChanging(System.Nullable<bool> value);
    partial void OnBoughtChanged();
    #endregion
		
		public Review()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewContent", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ReviewContent
		{
			get
			{
				return this._ReviewContent;
			}
			set
			{
				if ((this._ReviewContent != value))
				{
					this.OnReviewContentChanging(value);
					this.SendPropertyChanging();
					this._ReviewContent = value;
					this.SendPropertyChanged("ReviewContent");
					this.OnReviewContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingLevel", DbType="Int NOT NULL")]
		public int RatingLevel
		{
			get
			{
				return this._RatingLevel;
			}
			set
			{
				if ((this._RatingLevel != value))
				{
					this.OnRatingLevelChanging(value);
					this.SendPropertyChanging();
					this._RatingLevel = value;
					this.SendPropertyChanged("RatingLevel");
					this.OnRatingLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewDate", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset ReviewDate
		{
			get
			{
				return this._ReviewDate;
			}
			set
			{
				if ((this._ReviewDate != value))
				{
					this.OnReviewDateChanging(value);
					this.SendPropertyChanging();
					this._ReviewDate = value;
					this.SendPropertyChanged("ReviewDate");
					this.OnReviewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bought", DbType="Bit")]
		public System.Nullable<bool> Bought
		{
			get
			{
				return this._Bought;
			}
			set
			{
				if ((this._Bought != value))
				{
					this.OnBoughtChanging(value);
					this.SendPropertyChanging();
					this._Bought = value;
					this.SendPropertyChanged("Bought");
					this.OnBoughtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Review", Storage="_Customer", ThisKey="CustomerID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Reviews.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Reviews.Add(this);
						this._CustomerID = value.id;
					}
					else
					{
						this._CustomerID = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Review", Storage="_Product", ThisKey="ProductID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Reviews.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Reviews.Add(this);
						this._ProductID = value.id;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SequelizeMeta")]
	public partial class SequelizeMeta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public SequelizeMeta()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShippingAddresses")]
	public partial class ShippingAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _RecipientName;
		
		private string _PhoneNumber;
		
		private string _Address;
		
		private string _SpecificAddress;
		
		private string _CustomerID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<OrderCustomer> _OrderCustomers;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnRecipientNameChanging(string value);
    partial void OnRecipientNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnSpecificAddressChanging(string value);
    partial void OnSpecificAddressChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public ShippingAddress()
		{
			this._OrderCustomers = new EntitySet<OrderCustomer>(new Action<OrderCustomer>(this.attach_OrderCustomers), new Action<OrderCustomer>(this.detach_OrderCustomers));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RecipientName
		{
			get
			{
				return this._RecipientName;
			}
			set
			{
				if ((this._RecipientName != value))
				{
					this.OnRecipientNameChanging(value);
					this.SendPropertyChanging();
					this._RecipientName = value;
					this.SendPropertyChanged("RecipientName");
					this.OnRecipientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificAddress", DbType="NVarChar(255)")]
		public string SpecificAddress
		{
			get
			{
				return this._SpecificAddress;
			}
			set
			{
				if ((this._SpecificAddress != value))
				{
					this.OnSpecificAddressChanging(value);
					this.SendPropertyChanging();
					this._SpecificAddress = value;
					this.SendPropertyChanged("SpecificAddress");
					this.OnSpecificAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShippingAddress_OrderCustomer", Storage="_OrderCustomers", ThisKey="id", OtherKey="AddressID")]
		public EntitySet<OrderCustomer> OrderCustomers
		{
			get
			{
				return this._OrderCustomers;
			}
			set
			{
				this._OrderCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ShippingAddress", Storage="_Customer", ThisKey="CustomerID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ShippingAddresses.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ShippingAddresses.Add(this);
						this._CustomerID = value.id;
					}
					else
					{
						this._CustomerID = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderCustomers(OrderCustomer entity)
		{
			this.SendPropertyChanging();
			entity.ShippingAddress = this;
		}
		
		private void detach_OrderCustomers(OrderCustomer entity)
		{
			this.SendPropertyChanging();
			entity.ShippingAddress = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suppliers")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _SupplierName;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private System.Nullable<bool> _Status;
		
		private System.DateTimeOffset _createdAt;
		
		private System.DateTimeOffset _updatedAt;
		
		private EntitySet<DeliveryReceipt> _DeliveryReceipts;
		
		private EntitySet<ProductSupplierDetail> _ProductSupplierDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OncreatedAtChanging(System.DateTimeOffset value);
    partial void OncreatedAtChanged();
    partial void OnupdatedAtChanging(System.DateTimeOffset value);
    partial void OnupdatedAtChanged();
    #endregion
		
		public Supplier()
		{
			this._DeliveryReceipts = new EntitySet<DeliveryReceipt>(new Action<DeliveryReceipt>(this.attach_DeliveryReceipts), new Action<DeliveryReceipt>(this.detach_DeliveryReceipts));
			this._ProductSupplierDetails = new EntitySet<ProductSupplierDetail>(new Action<ProductSupplierDetail>(this.attach_ProductSupplierDetails), new Action<ProductSupplierDetail>(this.detach_ProductSupplierDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(255)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset updatedAt
		{
			get
			{
				return this._updatedAt;
			}
			set
			{
				if ((this._updatedAt != value))
				{
					this.OnupdatedAtChanging(value);
					this.SendPropertyChanging();
					this._updatedAt = value;
					this.SendPropertyChanged("updatedAt");
					this.OnupdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_DeliveryReceipt", Storage="_DeliveryReceipts", ThisKey="id", OtherKey="SupplierID")]
		public EntitySet<DeliveryReceipt> DeliveryReceipts
		{
			get
			{
				return this._DeliveryReceipts;
			}
			set
			{
				this._DeliveryReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ProductSupplierDetail", Storage="_ProductSupplierDetails", ThisKey="id", OtherKey="SupplierID")]
		public EntitySet<ProductSupplierDetail> ProductSupplierDetails
		{
			get
			{
				return this._ProductSupplierDetails;
			}
			set
			{
				this._ProductSupplierDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeliveryReceipts(DeliveryReceipt entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_DeliveryReceipts(DeliveryReceipt entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_ProductSupplierDetails(ProductSupplierDetail entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_ProductSupplierDetails(ProductSupplierDetail entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
}
#pragma warning restore 1591
